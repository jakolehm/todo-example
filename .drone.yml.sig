eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgdGVzdDoKICAgIGltYWdlOiBydWJ5OjIuMwogICAgY29tbWFuZHM6CiAgICAgIC0gYnVuZGxlIGluc3RhbGwgLS1wYXRoPWJ1bmRsZXIKICAgICAgLSByc3BlYyBzcGVjLwoKICBkb2NrZXJfdGVzdDoKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcjpsYXRlc3QKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9MQVVOQ0hfREVCVUc9dHJ1ZQogICAgcmVwbzogamFrb2xlaG0vdG9kby1leGFtcGxlCiAgICB0YWc6IGdpdC0ke0RST05FX0NPTU1JVH0KICAgIGZpbGU6IERvY2tlcmZpbGUKICAgIHdoZW46CiAgICAgIGJyYW5jaDogY2xvdWRleHBvCgogIGRlcGxveV90ZXN0OgogICAgaW1hZ2U6IGtvbnRlbmEvY2xpOjEuMy4wLnJjMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gSU5TVEFOQ0VTPTIKICAgICAgLSBEUk9ORV9UQUc9Z2l0LSR7RFJPTkVfQ09NTUlUfQogICAgICAtIFZJUlRVQUxfSE9TVD1jbG91ZGV4cG8tdGVzdC5rb250ZW5hLmlvCiAgICBjb21tYW5kczoKICAgICAgLSBrb250ZW5hIHN0YWNrIHVwZ3JhZGUgdG9kby10ZXN0CiAgICB3aGVuOgogICAgICBicmFuY2g6IGNsb3VkZXhwbwoKICBkb2NrZXJfcHJvZDoKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcjpsYXRlc3QKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9MQVVOQ0hfREVCVUc9dHJ1ZQogICAgcmVwbzogamFrb2xlaG0vdG9kby1leGFtcGxlCiAgICB0YWc6ICR7RFJPTkVfVEFHfQogICAgZmlsZTogRG9ja2VyZmlsZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwoKICBkZXBsb3lfcHJvZDoKICAgIGltYWdlOiBrb250ZW5hL2NsaToxLjMuMC5yYzIKICAgIGVudmlyb25tZW50OgogICAgICAtIElOU1RBTkNFUz01CiAgICAgIC0gVklSVFVBTF9IT1NUPWNsb3VkZXhwby1kZW1vLmtvbnRlbmEuaW8KICAgIGNvbW1hbmRzOgogICAgICAtIGtvbnRlbmEgc3RhY2sgdXBncmFkZSB0b2RvCiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgpzZXJ2aWNlczoKICBkYXRhYmFzZToKICAgIGltYWdlOiBtb25nbzozLjI.Vcx27b0usQJeywPiTJpyeqolXrAcWhW8Vj4aKWO6wQE